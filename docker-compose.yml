version: '3.9'
services:
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - rabbitmq_network

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - keycloak_network
      - postgres_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: ["start", "--import-realm"]
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8180
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_REALM_NAME: SpotiCloud
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db/keycloak_db
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8180:8080
    volumes:
      - ./realm-export.json:/tmp/realm-export.json
    restart: always
    depends_on:
      - db
    networks:
      - keycloak_network

  adminer:
    restart: unless-stopped
    image: adminer
    ports:
      - 8280:8080
    depends_on:
      - db
    networks:
      - postgres_network

  api-gateway:
    restart: unless-stopped
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - api_network
      - frontend_network
    depends_on:
      - music-service
      - session-service

  music-service:
    restart: unless-stopped
    image: music-service:latest
    ports:
      - 5176:5176
    environment:
      - RABBITMQ_HOST_NAME=${RABBITMQ_HOST_NAME}
      - POSTGRES_CONNECTION_STRING=${POSTGRES_CONNECTION_STRING}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - api_network
      - keycloak_network
      - rabbitmq_network
      - postgres_network

  session-service:
    restart: unless-stopped
    image: session-service:latest
    ports:
      - 5179:5179
    environment:
      - RABBITMQ_HOST_NAME=${RABBITMQ_HOST_NAME}
      - AZURE_STORAGE_URL=${AZURE_STORAGE_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - api_network
      - keycloak_network
      - rabbitmq_network
  
  frontend:
    restart: unless-stopped
    image: spoticloud-frontend:latest
    ports:
      - 3000:3000
    networks:
      - frontend_network

networks:
  keycloak_network:
    driver: bridge
  postgres_network:
    driver: bridge
  rabbitmq_network:
    driver: bridge
  api_network:
    driver: bridge
  frontend_network:
    driver: bridge